/* ------- Cube Rotation Effect ------- */
/* CSS perspective  */
.wrap {
  perspective: 800px;
  perspective-origin: 50% 100px;
}
/* the cube is 200px wide 
  relative positioning keeps the faces within bounds
  preserve-3d makes it 3d instead of flat*/
.cube {
  position: relative;
  width: 200px;
  transform-style: preserve-3d;
}
/* position and dimensions of each face are set */
.cube div {
  position: absolute;
  width: 200px;
  height: 155px;
}
/* Transformation of the individual faces */
.back {
  transform: translateZ(-100px) rotateY(180deg);
  background-color: #eee;
}
.right {
  transform: rotateY(-270deg) translateX(100px);
  transform-origin: top right;
  background-color: #eee;
}
.left {
  transform: rotateY(270deg) translateX(-100px);
  transform-origin: center left;
  background-color: #eee;
}
.top {
  transform: rotateX(-90deg) translateY(-100px);
  transform-origin: top center;
  background-color: #eee;
}
.bottom {
  transform: rotateX(90deg) translateY(100px);
  transform-origin: bottom center;
  background-color: #eee;
}
.front {
  transform: translateZ(100px);
  background-color: #eee;
}

/* Horizontal Spin */
@keyframes spin {
  from {
    transform: rotateY(0);
  }
  to {
    transform: rotateY(360deg);
  }
}

.cube {
  animation: spin 10s infinite linear;
}

/* Vertical Spin 
  @keyframes spin-vertical {
    from {
      transform: rotateX(0);
    }
    to {
      transform: rotateX(-360deg);
    }
  }
  
  .cube-wrap.vertical .cube {
    margin: 0 auto; 
    transform-origin: 0 100px;
    animation: spin-vertical 5s infinite linear;
  }
  
  .cube-wrap.vertical .top {
    transform: rotateX(-270deg) translateY(-100px);
  }
  
  .cube-wrap.vertical .back {
    transform: translateZ(-100px) rotateX(180deg);
  }
  
  .cube-wrap.vertical .bottom {
    transform: rotateX(-90deg) translateY(100px);
  }
  @keyframes spin {
    from {
      transform: rotateX(0);
    }
    to {
      transform: rotateX(360deg);
    }
  }
  
  .cube {
    animation: spin 5s infinite linear;
  }*/
