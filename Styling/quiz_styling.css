/*--120-standard-max--------------------------------------------------------------------------------------------------*/
/* CSS has a max function which returns the largest of a set of comma-separated values. For example:

Example Code

img {
  width: max(250px, 25vw);
}
   the width of the image will be 250px if the viewport width is less than 1000 pixels. If the viewport 
   width is greater than 1000 pixels, the width of the image will be 25vw. 
----------------------
The child combinator selector > is used between selectors to target only elements that match the second selector 
and are a direct child of the first selector.

This can be helpful when you have deeply nested elements and want to control the scope of your styling.


*/
@media (prefers-reduced-motion: no-preference) {
  * {
    scroll-behavior: smooth;
  }
}

body {
  background: #f5f6f7;
  color: #1b1b32;
  font-family: Helvetica;
  margin: 0;
}

button {
  display: block;
  margin: 40px auto;
  width: 40%;
  padding: 15px;
  font-size: 23px;
  background: #d0d0d5;
  border: 3px solid #3b3b4f;
}

footer {
  background-color: #2a2a40;
  display: flex;
  justify-content: center;
}

footer,
footer a {
  color: #dfdfe2;
}

header {
  width: 100%;
  height: 50px;
  background-color: #1b1b32;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: fixed;
  top: 0;
}

h1 {
  color: #f1be32;
  font-size: min(5vw, 1.2em);
  text-align: center;
}
/* Some fonts are easier to read than others, and this is especially true on low-resolution screens. */
h1,
h2 {
  font-family: Verdana, Tahoma;
}

h2 {
  margin-top: 0;
  padding-top: 60px;
  border-bottom: 4px solid #dfdfe2;
}

h3 {
  margin-top: 5px;
  padding-left: 15px;
  font-size: 22px;
}

h3::before {
  content: "Question #";
}

input {
  font-size: 16px;
}

li > a {
  color: inherit;
  text-decoration: none;
}
main {
  padding: 50px;
}
nav {
  width: 50%;
  max-width: 300px;
  height: 50px;
}

nav > ul {
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
  align-items: center;
  padding-inline-start: 0;
  margin-block: 0;
  height: 100%;
}

nav > ul > li {
  color: #dfdfe2;
  margin: 0 0.2rem;
  padding: 0.2rem;
  display: block;
}

nav > ul > li:hover {
  background-color: #dfdfe2;
  color: #1b1b32;
  cursor: pointer;
}

section {
  width: 80%;
  margin: 0 auto 10px auto;
  max-width: 600px;
}

.answers-list {
  list-style: none;
  padding: 0;
}

.formrow {
  margin-top: 10px;
  padding: 0px 5px 0 5px;
}
.info {
  padding: 10px 0 0 5px;
}

.info input {
  width: 50%;
  text-align: left;
}

.info label {
  width: 10%;
  min-width: 55px;
  text-align: right;
}

.info label,
.info input {
  display: inline-block;
}

#logo {
  width: max(10rem, 18vw);
  background-color: #0a0a23;
  aspect-ratio: 35/4;
  padding: 0.4rem;
}

/* A common pattern to visually hide text for only screen readers to read. */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.question {
  border: none;
  padding-bottom: 0;
}

.question-block {
  text-align: left;
  display: block;
  width: 100%;
  margin-top: 20px;
  padding-top: 5px;
}

/* Certain types of motion-based animations can cause discomfort for some users. In particular, people with vestibular 
disorders have sensitivity to certain motion triggers.

The @media at-rule has a media feature called prefers-reduced-motion to set CSS based on the user's preferences. 
It can take one of the following values:

reduce
no-preference
Example Code
@media (feature: value) {
  selector {
    styles
  }
} */
